/***************************************************
题目：
    给定一个数组，除了一个数出现1次之外，其余数都出现3次。
    找出出现一次的数。如：{1, 2, 1, 2, 1, 2, 7}, 找出7.
格式：
    第一行输入一个数n，代表数组的长度，接下来一行输入数组A[n],
    (输入的数组必须满足问题描述的要求),最后输出只出现一次的数。
要求：
    你的算法只能是线性时间的复杂度，并且不能使用额外的空间哦～
样例输入
    4
    0 0 0 5
样例输出
    5

感悟：
    进制还能这样用，真是神奇
***************************************************/
#include <stdio.h>
#include <math.h>

int main()
{
    int a[] = {1,2,3,1,2,1,3,2,7,3};
    int n = 10;
    int res, i, j, m;

    res = 0;
    for(i = 0; i < 32; i++)//32是int的二进制位数
    {
        m = 0;
        for(j = 0; j < n; j++)
        {
            if(a[j] % 2 == 1) m++;
            a[j] = a[j] >> 1;
        }
        res += (m % 3) * pow(2, i);//3指其余数都出现3次
    }

    printf("%d", res);
}
